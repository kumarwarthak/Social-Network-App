using System;
using System.IO;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json;
using System.Windows.Forms;

[System.AddIn.AddIn("ScriptMain", Version = "1.0", Publisher = "", Description = "")]
public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
{
    public void Main()
    {
        string siteUrl = "https://yoursharepointsite";
        string documentLibraryName = "Shared Documents";
        string localFilePath = @"C:\path\to\your\file.txt";
        string sharePointFileName = "file.txt";
        
        string tenantId = "your-tenant-id";
        string clientId = "your-client-id";
        string clientSecret = "your-client-secret";
        string resource = "https://yoursharepointsite";

        try
        {
            string accessToken = GetAccessToken(tenantId, clientId, clientSecret, resource).GetAwaiter().GetResult();
            UploadFileToSharePoint(siteUrl, documentLibraryName, localFilePath, sharePointFileName, accessToken).GetAwaiter().GetResult();

            MessageBox.Show("File uploaded successfully.");
            Dts.TaskResult = (int)ScriptResults.Success;
        }
        catch (Exception ex)
        {
            MessageBox.Show("Error: " + ex.Message);
            Dts.TaskResult = (int)ScriptResults.Failure;
        }
    }

    private async Task<string> GetAccessToken(string tenantId, string clientId, string clientSecret, string resource)
    {
        using (HttpClient httpClient = new HttpClient())
        {
            var tokenEndpoint = $"https://login.microsoftonline.com/{tenantId}/oauth2/v2.0/token";
            var requestBody = new FormUrlEncodedContent(new[]
            {
                new KeyValuePair<string, string>("client_id", clientId),
                new KeyValuePair<string, string>("scope", $"{resource}/.default"),
                new KeyValuePair<string, string>("client_secret", clientSecret),
                new KeyValuePair<string, string>("grant_type", "client_credentials")
            });

            HttpResponseMessage response = await httpClient.PostAsync(tokenEndpoint, requestBody);
            response.EnsureSuccessStatusCode();
            string responseBody = await response.Content.ReadAsStringAsync();

            dynamic tokenResponse = JsonConvert.DeserializeObject(responseBody);
            string accessToken = tokenResponse.access_token;

            return accessToken;
        }
    }

    private async Task UploadFileToSharePoint(string siteUrl, string documentLibraryName, string localFilePath, string sharePointFileName, string accessToken)
    {
        using (HttpClient httpClient = new HttpClient())
        {
            httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", accessToken);

            string uploadUrl = $"{siteUrl}/_api/web/GetFolderByServerRelativeUrl('{documentLibraryName}')/Files/add(url='{sharePointFileName}',overwrite=true)";

            using (var content = new StreamContent(File.OpenRead(localFilePath)))
            {
                content.Headers.ContentType = new MediaTypeHeaderValue("application/octet-stream");

                HttpResponseMessage response = await httpClient.PostAsync(uploadUrl, content);
                response.EnsureSuccessStatusCode();
            }
        }
    }
}
using System;
using System.IO;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;
using Microsoft.SqlServer.Dts.Runtime;
using Newtonsoft.Json.Linq;

public void Main()
{
    string clientId = "your_client_id";
    string clientSecret = "your_client_secret";
    string tenantId = "your_tenant_id";
    string siteUrl = "https://your_sharepoint_site";
    string uploadUrl = $"{siteUrl}/_api/web/GetFolderByServerRelativeUrl('/Shared Documents')/Files/add(url='your_file.txt',overwrite=true)";
    string filePath = "C:\\path_to_your_file.txt";

    string token = GetAccessToken(clientId, clientSecret, tenantId, siteUrl).Result;
    UploadFile(uploadUrl, filePath, token).Wait();

    Dts.TaskResult = (int)ScriptResults.Success;
}

private async Task<string> GetAccessToken(string clientId, string clientSecret, string tenantId, string siteUrl)
{
    using (var client = new HttpClient())
    {
        var tokenEndpoint = $"https://login.microsoftonline.com/{tenantId}/oauth2/v2.0/token";
        var body = $"client_id={clientId}&client_secret={clientSecret}&scope={siteUrl}/.default&grant_type=client_credentials";
        var content = new StringContent(body, System.Text.Encoding.UTF8, "application/x-www-form-urlencoded");

        var response = await client.PostAsync(tokenEndpoint, content);
        var responseContent = await response.Content.ReadAsStringAsync();
        var token = JObject.Parse(responseContent)["access_token"].ToString();

        return token;
    }
}

private async Task UploadFile(string uploadUrl, string filePath, string token)
{
    using (var client = new HttpClient())
    {
        client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        var fileContent = new ByteArrayContent(File.ReadAllBytes(filePath));
        fileContent.Headers.ContentType = new MediaTypeHeaderValue("application/octet-stream");

        var response = await client.PostAsync(uploadUrl, fileContent);
        response.EnsureSuccessStatusCode();
    }
}
